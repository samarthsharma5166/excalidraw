// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id    String @id @default(uuid())
  email String @unique
  password String 
  username String @unique
  profile   String?
  room      Room[]
  chats     Chat[]
  sessions      Session[]
  accounts      Account[]

}

model Room{
  id    Int @id @default(autoincrement())
  slug  String  @unique
  createdAt DateTime  @default(now())
  adminId String
  admin User  @relation(fields: [adminId],references: [id])
  chats Chat[]
}

model Chat{
  id    Int @id @default(autoincrement())
  message String
  userId String
  roomId Int
  room Room @relation(fields: [roomId],references: [id])
  user User @relation(fields: [userId],references: [id])
}


model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  user              User    @relation(fields: [userId], references: [id])
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
